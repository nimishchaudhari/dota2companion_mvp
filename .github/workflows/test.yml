name: Test Suite

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run ESLint
        run: cd frontend && npm run lint

      - name: Run TypeScript check
        run: cd frontend && npm run type-check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run unit tests with coverage
        run: cd frontend && npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          directory: frontend/coverage
          flags: frontend
          fail_ci_if_error: false

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: frontend/coverage/
          retention-days: 7

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Install Playwright browsers
        run: cd frontend && npx playwright install --with-deps

      - name: Build application
        run: cd frontend && npm run build

      - name: Run E2E tests
        run: cd frontend && npm run test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 7

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results
          path: frontend/test-results/
          retention-days: 7

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Build application
        run: cd frontend && npm run build

      - name: Check build output
        run: |
          cd frontend
          ls -la dist/
          du -sh dist/
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: frontend/dist/
          retention-days: 7

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run bundle analysis
        run: cd frontend && npm run build:analyze

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: frontend/dist/stats.html
          retention-days: 7

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Run npm audit
        run: cd frontend && npm audit --audit-level=high

      - name: Run npm audit fix (dry run)
        run: cd frontend && npm audit fix --dry-run

  performance-budget:
    name: Performance Budget
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Build application
        run: cd frontend && npm run build

      - name: Check bundle size
        run: |
          cd frontend/dist
          echo "=== Bundle Size Report ==="
          echo "Main JS bundle:"
          find . -name "*.js" -type f -exec du -h {} + | sort -rh | head -5
          echo ""
          echo "CSS bundles:"
          find . -name "*.css" -type f -exec du -h {} + | sort -rh
          echo ""
          echo "Total dist size:"
          du -sh .
          echo ""
          echo "=== Size Limits Check ==="
          MAIN_JS_SIZE=$(find . -name "index-*.js" -exec du -b {} + | cut -f1)
          echo "Main JS size: ${MAIN_JS_SIZE} bytes"
          
          # Set bundle size limits (in bytes)
          MAX_JS_SIZE=2097152  # 2MB
          MAX_TOTAL_SIZE=10485760  # 10MB
          
          TOTAL_SIZE=$(du -sb . | cut -f1)
          echo "Total size: ${TOTAL_SIZE} bytes"
          
          if [ "${MAIN_JS_SIZE}" -gt "${MAX_JS_SIZE}" ]; then
            echo "❌ Main JS bundle exceeds 2MB limit"
            exit 1
          fi
          
          if [ "${TOTAL_SIZE}" -gt "${MAX_TOTAL_SIZE}" ]; then
            echo "❌ Total bundle exceeds 10MB limit"
            exit 1
          fi
          
          echo "✅ Bundle sizes within limits"

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests, e2e-tests, build-test]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.lint-and-typecheck.result }}" == "success" ]; then
            echo "✅ Lint and Type Check: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Lint and Type Check: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.unit-tests.result }}" == "success" ]; then
            echo "✅ Unit Tests: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Unit Tests: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.e2e-tests.result }}" == "success" ]; then
            echo "✅ E2E Tests: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ E2E Tests: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.build-test.result }}" == "success" ]; then
            echo "✅ Build Test: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Build Test: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View detailed reports in the job artifacts." >> $GITHUB_STEP_SUMMARY